x ::= <identifiers>

i ::= <integers>

b ::= true | false


e ::= x | i | b | e1 bop e2
    | if e1 then e2 else e3
    | let x = e1 in e2

bop ::= + | * | <=

v ::= i | b 

/* 
i -/->
b -/-> 
x -/-> 

e1 bop e2 --> e1' bop e2 
  if e1 --> e1'
v1 bop e2 --> v1 bop e2'
  if e2 --> e2'
v1 bop v2 --> v 

if e1 then e2 else e3 --> if e1' then e2 else e3
  if e1 --> e1'
if true  then e2 else e3 --> e2 
if false then e2 else e3 --> e3

let x = e1 in e2 --> let x = e1' in e2 
  if e1 --> e1' 
let x = v in e2 --> e2{v/x} 
 */


/*
  substitution:
  i{e/x} = i
  b{e/x} = b
  x{e/x} = e
  y{e/x} = y
  (e1 bop e2){e/x} = e1{e/x} bop e2{e/x}
*/